## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *
from eudplib.core.eudfunc import EUDTraceLog, EUDTracedFunc, EUDTracedTypedFunc, EUDTracedMethod, EUDTracedTypedMethod
from eudplib.epscript.helper import _RELIMP, _IGVA, _CGFW, _ARR, _VARR, _SRET, _SV, _ATTW, _ARRW, _ATTC, _ARRC, _L2V, _LVAR, _LSH, _ALL
# (Line 1) import Tools as t;
import Tools as t
# (Line 3) const mouse_loc = $L("mouse");
mouse_loc = _CGFW(lambda: [GetLocationIndex("mouse")], 1)[0]
# (Line 4) const tloc = [$L("Create"), $L("Temp")];
tloc = _CGFW(lambda: [_ARR(FlattenList([GetLocationIndex("Create"), GetLocationIndex("Temp")]))], 1)[0]
# (Line 5) const tunit = [37, 38];
tunit = _CGFW(lambda: [_ARR(FlattenList([37, 38]))], 1)[0]
# (Line 6) const tsprite = [159, 146];
tsprite = _CGFW(lambda: [_ARR(FlattenList([159, 146]))], 1)[0]
# (Line 7) const timage = [928, 557];
timage = _CGFW(lambda: [_ARR(FlattenList([928, 557]))], 1)[0]
# (Line 10) function OPS() {
@EUDFunc
def OPS():
    # (Line 16) }
    # (Line 18) function BTE() {
    pass

@EUDFunc
def BTE():
    # (Line 19) foreach(cp : EUDLoopPlayer("Human")) {
    for cp in EUDLoopPlayer("Human"):
        # (Line 20) setcurpl(cp);
        f_setcurpl(cp)
        # (Line 22) t.AsyncScanEffect(tloc[cp%2], timage[cp%2]);
        t.AsyncScanEffect(tloc[cp % 2], timage[cp % 2])
        # (Line 23) }
        # (Line 24) }

    # (Line 26) function ATE() {

@EUDFunc
def ATE():
    # (Line 28) }
    pass
